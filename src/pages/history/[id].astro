---
import Layout from "../../layouts/Layout.astro";
import HeaderSection from "../../components/HeaderSection.astro";

export async function getStaticPaths() {
	const all = await fetch("http://localhost:5001/Parkings/all");
	const places = await all.json();

	return places.map((parking: any) => ({
		params: { id: String(parking.id) }, // ¡Importante convertir a string!
	}));
}

const { id } = Astro.params;

const res = await fetch(`http://localhost:5001/Parkings/${id}/history`);
const place = await res.json();

if (!place) {
	throw new Error("Place not found");
}
---

<Layout>
	<div
		class="p-4 w-full gap-4 max-h-screen flex flex-1 flex-col mb-12"
	>
		<section>
			<HeaderSection title="Ultimos cambios" />
			<div class="w-full flex flex-col">
				<div class="bg-gray-100 rounded-lg w-full h-64 flex flex-row items-end justify-start p-4 gap-3 overflow-x-auto">
					{place.map((history: any) => {
						const percentage = (history.occupiedSpots / history.totalSpots) * 100;
						const date = new Date(history.timestamp);
						// Calcula la altura en píxeles (máximo 200px para un contenedor de h-64)
						const barHeight = Math.max(20, (percentage / 100) * 200);
						const formattedDate = date.toLocaleDateString("es-ES", {
							day: "2-digit",
							month: "2-digit"
						});
						
						return (
							<div class="flex flex-col items-center">
								<div
									class={`${percentage<50? 'bg-green-500': percentage<70?'bg-yellow-500':'bg-red-500'} w-16 rounded-t-md flex items-end justify-center text-white font-bold px-2 py-1`}
									style={`height: ${barHeight}px;`}
								>
									{Math.round(percentage)}%
								</div>
								<div class="flex flex-col items-center text-xs mt-1">
									<span>{date.toLocaleTimeString("es-ES", {
										hour: "2-digit",
										minute: "2-digit",
									})}</span>
									<span class="text-gray-500">{formattedDate}</span>
								</div>
							</div>
						);
					})}
				</div>
			</div>
			<table
				class="w-full table-auto border-collapse border border-gray-300 text-center rounded-lg shadow-md"
			>
				<thead class="text-xs text-gray-200 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
					<th>Hora</th>
					<th>Fecha</th>
					<th>Lugares Ocupados</th>
					<th>Lugares</th>
				</thead>
				<tbody class="bg-white divide-y divide-gray-300">
					{place.map((history: any) => {
						const date = new Date(history.timestamp);
						const formattedDate = date.toLocaleDateString("es-ES");
						const formattedTime = date.toLocaleTimeString("es-ES", {
							hour: "2-digit",
							minute: "2-digit",
							hour12: true,
						});
						return (
							<tr>
								<td>{formattedTime}</td>
								<td>{formattedDate}</td>
								<td>{history.occupiedSpots}</td>
								<td>{history.totalSpots}</td>
							</tr>
						);
					})}
				</tbody>
			</table>
		</section>
	</div>
</Layout>
